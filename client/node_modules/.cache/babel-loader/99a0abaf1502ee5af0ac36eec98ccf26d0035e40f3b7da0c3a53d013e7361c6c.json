{"ast":null,"code":"import React,{useState}from'react';import InputForm from'./components/InputForm';import ResultsSection from'./components/ResultsSection';import ErrorMessage from'./components/ErrorMessage';import LoadingSpinner from'./components/LoadingSpinner';import'./styles.css';/**\n * Main App component\n * Manages the state for results and errors, and handles form submission\n */import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[results,setResults]=useState(null);const[error,setError]=useState(null);const[isLoading,setIsLoading]=useState(false);/**\n   * Handles form submission by sending a request to the server\n   * @param {string} url - The product URL to compare prices for\n   */const handleSubmit=async url=>{try{setError(null);setIsLoading(true);const response=await fetch('/api/compare',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({url})});const contentType=response.headers.get(\"content-type\");if(contentType&&contentType.indexOf(\"application/json\")!==-1){const data=await response.json();if(!response.ok)throw new Error(data.error||'Failed to fetch data');setResults(data);}else{// If the response is not JSON, read it as text\nconst text=await response.text();throw new Error(`Unexpected response from server: ${text.substring(0,100)}...`);}}catch(err){console.error('Error details:',err);setError(err.message);}finally{setIsLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Price Comparison App\"}),/*#__PURE__*/_jsx(InputForm,{onSubmit:handleSubmit}),error&&/*#__PURE__*/_jsx(ErrorMessage,{message:error}),isLoading&&/*#__PURE__*/_jsx(LoadingSpinner,{}),results&&/*#__PURE__*/_jsx(ResultsSection,{results:results})]});}export default App;","map":{"version":3,"names":["React","useState","InputForm","ResultsSection","ErrorMessage","LoadingSpinner","jsx","_jsx","jsxs","_jsxs","App","results","setResults","error","setError","isLoading","setIsLoading","handleSubmit","url","response","fetch","method","headers","body","JSON","stringify","contentType","get","indexOf","data","json","ok","Error","text","substring","err","console","message","className","children","onSubmit"],"sources":["/Users/sohilgupta/Documents/Work/price-comparison/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport InputForm from './components/InputForm';\nimport ResultsSection from './components/ResultsSection';\nimport ErrorMessage from './components/ErrorMessage';\nimport LoadingSpinner from './components/LoadingSpinner';\nimport './styles.css';\n\n/**\n * Main App component\n * Manages the state for results and errors, and handles form submission\n */\nfunction App() {\n  const [results, setResults] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  /**\n   * Handles form submission by sending a request to the server\n   * @param {string} url - The product URL to compare prices for\n   */\n  const handleSubmit = async (url) => {\n    try {\n      setError(null);\n      setIsLoading(true);\n      const response = await fetch('/api/compare', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ url }),\n      });\n\n      const contentType = response.headers.get(\"content-type\");\n      if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n        const data = await response.json();\n        if (!response.ok) throw new Error(data.error || 'Failed to fetch data');\n        setResults(data);\n      } else {\n        // If the response is not JSON, read it as text\n        const text = await response.text();\n        throw new Error(`Unexpected response from server: ${text.substring(0, 100)}...`);\n      }\n    } catch (err) {\n      console.error('Error details:', err);\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Price Comparison App</h1>\n      <InputForm onSubmit={handleSubmit} />\n      {error && <ErrorMessage message={error} />}\n      {isLoading && <LoadingSpinner />}\n      {results && <ResultsSection results={results} />}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,CAAAC,YAAY,KAAM,2BAA2B,CACpD,MAAO,CAAAC,cAAc,KAAM,6BAA6B,CACxD,MAAO,cAAc,CAErB;AACA;AACA;AACA,GAHA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAIA,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACxC,KAAM,CAACc,SAAS,CAAEC,YAAY,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAEjD;AACF;AACA;AACA,KACE,KAAM,CAAAgB,YAAY,CAAG,KAAO,CAAAC,GAAG,EAAK,CAClC,GAAI,CACFJ,QAAQ,CAAC,IAAI,CAAC,CACdE,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAG,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,cAAc,CAAE,CAC3CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEP,GAAI,CAAC,CAC9B,CAAC,CAAC,CAEF,KAAM,CAAAQ,WAAW,CAAGP,QAAQ,CAACG,OAAO,CAACK,GAAG,CAAC,cAAc,CAAC,CACxD,GAAID,WAAW,EAAIA,WAAW,CAACE,OAAO,CAAC,kBAAkB,CAAC,GAAK,CAAC,CAAC,CAAE,CACjE,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAClC,GAAI,CAACX,QAAQ,CAACY,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAACH,IAAI,CAAChB,KAAK,EAAI,sBAAsB,CAAC,CACvED,UAAU,CAACiB,IAAI,CAAC,CAClB,CAAC,IAAM,CACL;AACA,KAAM,CAAAI,IAAI,CAAG,KAAM,CAAAd,QAAQ,CAACc,IAAI,CAAC,CAAC,CAClC,KAAM,IAAI,CAAAD,KAAK,CAAC,oCAAoCC,IAAI,CAACC,SAAS,CAAC,CAAC,CAAE,GAAG,CAAC,KAAK,CAAC,CAClF,CACF,CAAE,MAAOC,GAAG,CAAE,CACZC,OAAO,CAACvB,KAAK,CAAC,gBAAgB,CAAEsB,GAAG,CAAC,CACpCrB,QAAQ,CAACqB,GAAG,CAACE,OAAO,CAAC,CACvB,CAAC,OAAS,CACRrB,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAED,mBACEP,KAAA,QAAK6B,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBhC,IAAA,OAAAgC,QAAA,CAAI,sBAAoB,CAAI,CAAC,cAC7BhC,IAAA,CAACL,SAAS,EAACsC,QAAQ,CAAEvB,YAAa,CAAE,CAAC,CACpCJ,KAAK,eAAIN,IAAA,CAACH,YAAY,EAACiC,OAAO,CAAExB,KAAM,CAAE,CAAC,CACzCE,SAAS,eAAIR,IAAA,CAACF,cAAc,GAAE,CAAC,CAC/BM,OAAO,eAAIJ,IAAA,CAACJ,cAAc,EAACQ,OAAO,CAAEA,OAAQ,CAAE,CAAC,EAC7C,CAAC,CAEV,CAEA,cAAe,CAAAD,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}